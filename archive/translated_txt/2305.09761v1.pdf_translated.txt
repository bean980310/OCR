--- ABSTRACT ---
- 신경 복사장(NeRF)은 컬러 이미지에서 3D 환경을 모델링하는 암묵적 장면 표현의 한 종류입니다. NeRF는 표현력이 뛰어나 실제 환경의 복잡하고 다중 스케일 지오메트리를 모델링할 수 있어 로봇 응용 프로그램에 강력한 도구가 될 수 있습니다. 최신 NeRF 학습 라이브러리는 단 몇 초 만에 정적 데이터 세트에서 사실적인 NeRF를 생성할 수 있지만 오프라인 사용을 위해 설계되었으며 느린 포즈 최적화 사전 계산 단계가 필요합니다. 이 작업에서 우리는 로봇 운영 체제(ROS)와 인기 있는 Nerfstudio 라이브러리 간의 오픈 소스 브리지인 NerfBridge를 제안하여 이미지 스트림에서 NeRF를 실시간으로 온라인 학습합니다. NerfBridge는 Nerfstudio에서 제공하는 효율적인 학습 파이프라인과 모델 라이브러리에 대한 확장 가능한 인터페이스를 제공하여 로봇 공학에서 NeRF를 적용하는 연구를 빠르게 개발할 수 있도록 합니다. 예시 사용 사례로서 실내 및 실외 환경에서 쿼드로터에 장착된 카메라로 촬영한 이미지에서 NeRF를 학습하는 데 사용할 수 있는 하드웨어 설정을 설명합니다. 동반 비디오 https://youtu.be/EHOSLn-RcDg 및 코드 https://github.com/javieryu/nerf_bridge. 색인 용어-NeRF, SLAM, 온라인, 암묵적 맵 I.
--- INTRODUCTION ---
신경 암묵적 장면 표현은 폭셀이나 포인트 클라우드와 같은 기존의 이산적 장면 표현에 대한 표현적이고 메모리 효율적인 대안을 제공합니다. 이러한 암묵적 표현의 한 종류는 NeRF(Neural Radiance Fields)로, 가장 기본적인 형태로 색상 이미지와 카메라 포즈 쌍의 데이터 세트를 사용하여 신경망의 학습을 감독하고, 신경망은 데이터 세트의 이미지에서 캡처된 환경의 연속적인 맵을 학습합니다. NeRF 기반 표현의 상대적인 단순성과 유연성은 로봇 응용 프로그램에서 3D 환경이 표현되는 방식을 바꿀 수 있는 잠재력이 있습니다. Nerfstudio[1]는 NeRF 개발을 위한 모듈식 라이브러리로, 최첨단 NeRF 학습 파이프라인과 모델의 효율적인 구현에 쉽게 액세스할 수 있도록 합니다. 그러나 이는 NeRF를 학습하기 전에 데이터가 전체적으로 수집되는 오프라인 응용 프로그램을 위해 크게 설계되었습니다. 로봇 응용 프로그램의 경우 이 워크플로는 쉽게 적용할 수 없습니다. 이러한 문제의 경우 데이터가 로봇의 다양한 온보드 센서에서 스트림으로 지속적으로 수신되기 때문입니다. 일반적으로 이러한 온보드 센서와 다운스트림 작업은 로봇 운영 체제(ROS)를 사용하여 조율됩니다[2]. 이를 위해 *연락처: javieryu@stanford.edu. 1. 스탠포드 대학교 항공우주학과 2. 스탠포드 대학교 기계공학과. 이 연구는 ONR 보조금 N00014-18-1-2830, DARPA 보조금 HR001120C0107 및 Applied Intuition, Inc.의 기부금으로 일부 자금을 지원받았습니다. 카메라 장착 로봇 ⠀⠀⠀ROS 실시간 포즈 추정 이미지 스트림 카메라 포즈 NerfBridge 노드 실시간 NeRF 교육 nerfstudio 그림 1. 스트리밍 이미지와 실시간 NeRF 교육을 통합하기 위한 NerfBridge 패키지의 기능에 대한 기본 개요. 통합과 개발을 가능한 한 원활하게 하기 위해 NerfStudio와 ROS 간의 격차를 메우는 소프트웨어 패키지인 NerfBridge를 제안합니다. 두 로봇 플랫폼의 요구 사항이 동일하지 않으므로 NerfBridge를 통해 우리의 목표는 모든 사람에게 맞는 패키지를 제공하는 것이 아닙니다. 대신 실무자가 애플리케이션별 용도의 기반으로 사용할 수 있는 두 라이브러리 간의 최소하고 적응 가능한 인터페이스를 개발했습니다. 온라인 NeRF 교육과 관련된 작업은 섹션 II에서 다루고 NerfBridge의 기본 기능은 섹션 III에서 설명하고 섹션 IV에서는 카메라가 장착된 쿼드로터와 지상국을 사용하여 실시간으로 NeRF를 구성하는 방법에 대한 자세한 설명을 제공합니다. 마지막으로 섹션 V에서는 로봇과 신경 암묵적 장면 표현의 교차점에서 잠재적인 연구 방향을 논의합니다. II.
--- RELATED WORK ---
NeRF를 사용한 초기 작업에서는 다운스트림 로봇 작업에서 사용할 수 있을 만큼 충분한 품질의 NeRF를 얻기 위해 최소 1시간 이상, 종종 그 이상의 교육 시간이 필요했습니다[3]. 그러나 [4]의 획기적인 연구에서는 여러 혁신과 최적화를 사용하면 NeRF 교육 시간을 단 몇 초로 줄일 수 있음을 보여주었습니다. ICRA 2023 비전통적 공간 표현 워크숍에서 발표 SLAM(Simultaneous Localization and Mapping) 알고리즘에서 공간 표현으로서 NeRF의 잠재력은 [5]에서 처음 시연되었습니다. 여기서 신경 암묵적 맵과 카메라 포즈는 RGB-D 이미지를 사용하여 공동으로 최적화되었습니다. 이후 작업인 [6]에서는 계층적 NeRF 아키텍처를 사용하면 환경의 재구성 정확도가 향상됨을 보여주었습니다. RGB-D 이미지를 입력으로 사용하는 이전 두 작업과 달리 [7]에서는 RGB 이미지와 고밀도 SLAM 알고리즘의 출력을 사용하여 NeRF 맵을 구축하고 이를 통해 더 높은 충실도의 암묵적 맵을 만들 수 있음을 보여줍니다. 모든
--- METHOD ---
s [5], [6] 및 [7]은 유사한 아이디어에 대한 변형을 제공하지만, 기존 ROS를 사용한 오픈 소스 구현이 부족하기 때문에 기존 로봇 플랫폼과의 통합에 특별히 적합한 것은 없습니다.또한 이러한 구현을 위한 기존 코드는 모듈성이 부족하고 사용자를 작성자가 선택한 NeRF 아키텍처와 포즈 추정 방법으로 제한합니다.NerfBridge를 사용하면 사용자는 Nerfstudio에 이미 구현된 수많은 방법 중에서 NeRF 아키텍처를 자유롭게 선택하고 ROS와 호환되는 모든 포즈 추정 방법을 사용할 수 있습니다.III. NERFBRIDGE 기존 NeRF 훈련에는 컬러 이미지와 해당 이미지를 촬영하는 데 사용된 카메라의 포즈라는 두 가지 입력이 필요합니다.카메라의 고유 매개변수를 사용하여 레이 트레이싱 재구성 손실[3]을 사용하여 기본 신경망을 감독하여 NeRF를 생성합니다.따라서 NeRF의 온라인 훈련을 위해 포즈를 취한 컬러 이미지 스트림에 대한 액세스를 제공하고 사용 중인 카메라에 대한 고유 매개변수를 초기화해야 합니다. NerfBridge는 ROS와 함께 작동하도록 설계되었으므로 이러한 값은 독립적인 ROS 토픽에 게시되는 메시지로 전달됩니다.포즈에 대한 토픽 하나와 이미지에 대한 토픽 하나입니다.NerfBridge는 핵심적으로 이러한 토픽을 수신하는 ROS 노드를 만들고, 미리 할당된 배열에 새 이미지와 포즈를 지속적으로 삽입합니다.병렬로 Nerfstudio를 사용하여 사용 가능한 이미지 풀의 픽셀을 사용하여 NeRF를 지속적으로 훈련하고 업데이트합니다.이 프로세스는 훈련 배열이 채워질 때까지 계속되며, 이 시점에서 새 이미지가 추가되지 않고 NeRF 훈련은 수렴될 때까지 정적 데이터 세트에서 진행됩니다.각 이미지의 포즈를 추정하는 작업은 NeRF 문헌에서 종종 간과되며, 오프라인 NeRF 접근 방식은 일반적으로 모션 패키지 COLMAP[8]의 구조를 사용하여 전체 이미지 데이터 세트에 포즈를 할당합니다.스트리밍 컨텍스트에서 이는 실행 가능한 옵션이 아니며 대신 포즈를 실시간으로 계산해야 합니다.NeRF 훈련에 필요한 포즈는 외부 모션 추적 시스템 및 시각적 오도미터 방법을 포함하여 여러 가지 다른 방법으로 추정할 수 있습니다. 하드웨어 구현에서 우리는 오픈 소스 시각적 오도미터 패키지 ORBSLAM3 [9]를 사용하여 카메라 포즈를 추정합니다.NerfBridge의 설계 철학의 일부는 풍부한 기능을 만들어 유지 관리를 더 쉽게 하고 새로운 애플리케이션에 더 빠르게 적응하도록 하기보다는 필수 기능에만 제한하는 것입니다.그러기 위해 우리는 NerfBridge의 단순성을 유지하기 위해 가능한 확장(예: 키 프레이밍)을 구현하지 않습니다.또한 대부분 온라인 NeRF 교육은 비교적 미개척 분야이고 이러한 확장의 이점은 아직 연구되지 않았기 때문입니다.IV. 매핑 사례 연구 NeRF의 기본 응용 프로그램 중 하나는 매핑이며, 이 섹션에서는 카메라가 장착된 쿼드로터와 컴퓨팅 지상국을 NerfBridge를 사용하여 조정하여 관심 대상의 NERF를 구축하는 방법을 설명합니다.실시간으로 NeRF를 훈련하면 운영자는 쿼드로터가 관심 영역을 통과하는 동안 NeRF의 현재 품질을 피드백으로 사용할 수 있습니다. 이를 통해 운영자가 쿼드로터를 착륙시키고, 촬영한 이미지를 오프로드하고, NeRF를 훈련시킨 다음, NeRF 품질이 좋지 않으면 더 많은 이미지를 얻기 위해 다시 배치해야 하는 오프라인 훈련 워크플로를 피할 수 있습니다.이 구현에서 쿼드로터는 WiFi 연결을 통해 이미지를 지상국 컴퓨터로 전송합니다.그런 다음 지상국은 ORBSLAM3[9]을 사용하여 각 프레임에서 카메라의 포즈를 추정하고, 이 포즈와 이미지 쌍은 차례로 처리되어 NerfBridge를 통해 Nerfstudio로 전달됩니다.A. 하드웨어 세부 정보 쿼드로터의 온보드 컴퓨터는 Ubuntu 20.04와 ROS Noetic을 실행하는 Raspberry Pi 4B이며, WiFi를 통해 카메라를 작동하고 지상국과 통신하는 데 사용됩니다.이 애플리케이션에서 가장 중요한 하드웨어는 카메라일 수 있으며, 이 경우 WithRobot의 1.2MP 글로벌 셔터 USB 카메라(oCam-1GNN-U)를 선택했습니다. 여기서 가장 중요한 고려 사항은 글로벌 셔터 카메라가 모션 블러와 같은 이미지 아티팩트가 적고, 또한 이 카메라의 제조업체가 공개적으로 사용 가능한 ROS 노드 구현을 제공하여 기존 로봇 플랫폼과의 통합이 비교적 간단하다는 것입니다.Nvidia GPU가 있는 지상국도 Nerfstudio가 CUDA[10]를 사용하여 NeRF 훈련 파이프라인을 최적화하기 때문에 실시간 훈련에 필수적입니다.우리의 설정에서는 RTX 3090 GPU, AMD Ryzen 9 5900X CPU, 32GB RAM이 있는 데스크톱 컴퓨터를 사용하여 ORBSLAM3, NerfBridge 및 모니터링 소프트웨어를 병렬로 실행하기에 충분한 컴퓨팅을 제공합니다.B. 실내 비행 세부 정보 우리 설정의 첫 번째 테스트는 쿼드로터가 폼 기둥과 파이프 세트 주위를 나선형 궤적으로 날리는 모의 실내 매핑 시나리오였습니다.우리는 모션 캡처 카메라를 사용하여 비행 컨트롤러에 대한 위치 정보를 제공하고, 별도로 시각적 오도미터를 사용하여 NerfBridge의 포즈를 추정합니다. 임무 중에 쿼드로터는 약 20Hz로 이미지를 스트리밍하고, 이는 NerfBridge에서 2Hz로 하위 샘플링됩니다. 비행 시간은 약 2.5분이었으며, 약 300개의 이미지로 구성된 최종 이미지 세트가 생성되었습니다. 그림 2는 더 많은 이미지가 추가되고 쿼드로터가 비행함에 따라 NeRF 품질이 진행되는 모습을 보여줍니다. 약 1분의 비행 시간 후에 새로 추가된 이미지는 대부분 중복되고 NeRF 맵 품질이 크게 향상되지 않습니다. 최종 NeRF에는 관심 대상(기둥)의 정확한 재구성과 창문, 조명, 유리를 포함한 주변 방이 모두 포함됩니다. 10초 20초 40초 60초 그림 2. NerfBridge를 사용하여 폼 상자와 파이프 주위를 나선형 궤적으로 비행하여 생성된 추가 시간의 NeRF 재구성. C. 야외 비행 세부 정보 우리의 설정이 보다 현실적인 야외 조건에서도 작동할 수 있는지 확인하기 위해, 쿼드로터가 건물의 측면을 관심 지점으로 하여 지면에 가까운 래스터 궤적을 비행하는 야외 매핑 시나리오에서도 테스트했습니다. 이 비행은 스탠포드 대학교 캠퍼스의 엘리엇 센터에서 수행되었습니다. 이 경우 GPS와 온보드 센서를 사용하여 안정적인 비행을 유지하고, 시각적 오도미터를 다시 별도로 사용하여 NerfBridge의 포즈를 추정합니다. 실내에서 비행 시간과 샘플링 속도는 동일합니다.
--- EXPERIMENT ---
. 그림 3은 결과 NeRF의 렌더링입니다. NerfBridge는 건물 외관과 창문의 다중 규모 구조를 포착할 수 있습니다. V.
--- CONCLUSION ---
S 및 향후 작업 NerfBridge의 핵심 목표는 로봇 파이프라인에서 신경 암묵적 맵을 통합하는 프로세스를 간소화하고 로봇에서 NeRF 응용 프로그램 탐색을 가속화하는 것입니다.이를 위해 최첨단 NeRF 학습 라이브러리를 기존 로봇 플랫폼과 인터페이스할 수 있는 모듈식 ROS 기반 소프트웨어 패키지를 설계했습니다.향후 작업에서는 NeRF 탐색 알고리즘[11]을 온라인 NeRF 학습과 결합하여 로봇 궤적 최적화 및 매핑을 위한 새로운 방식으로 사용할 수 있기를 바랍니다.온라인 NeRF 학습 자체도 비교적 미개척 분야이며 NerfBridge는 NeRF 학습 중에 치명적인 망각을 방지하기 위해 새로운 정보 기반 키프레이밍 방식의 효과를 연구할 수 있는 기회를 제공합니다. 참고문헌 [1] M. Tancik, E. Weber, E. Ng, R. Li, B. Yi, J. Kerr, T. Wang, A. Kristoffersen, J. Austin, K. Salahi, A. Ahuja, D. McAllister, and A. Kanazawa, &quot;Nerfstudio: A modules of nervous radiance field development,&quot; arXiv preprint arXiv:2302.04264, 2023. [2] M. Quigley, K. Conley, B. Gerkey, J. Faust, T. Foote, J. Leibs, R. Wheeler, AY Ng et al., &quot;Ros: an open-source robot operating system,&quot; ICRA workshop on open source software, vol. 3, no. 3.2. 일본 고베, p. 5. [3] B. Mildenhall, PP Srinivasan, M. Tancik, JT Barron, R. Ramamoorthi, R. Ng, &quot;Nerf: 뷰 합성을 위한 신경 광도 필드로 장면 표현&quot;, ACM 커뮤니케이션, 제65권, 제1호, 2021년. [4] T. Müller, A. Evans, C. Schied, A. Keller, &quot;다중 해상도 해시 인코딩을 사용한 인스턴트 신경 그래픽 기본 요소&quot;, ACM 그래픽스 트랜잭션(ToG), 제41권, 제4호, 1-15쪽, 2022년. [5] E. Sucar, S. Liu, J. Ortiz, AJ Davison, &quot;imap: 실시간으로 암묵적 매핑 및 위치 지정&quot;, IEEE/CVF 컴퓨터 비전 국제 컨퍼런스 논문집, 2021년, 6229-6238쪽. [6] Z. Zhu, S. Peng, V. Larsson, W. Xu, H. Bao, Z. Cui, MR Oswald 및 M. Pollefeys, &quot;Nice-slam: slam을 위한 신경 암시적 확장 가능 인코딩&quot;, IEEE/CVF 컴퓨터 비전 및 패턴 인식 컨퍼런스 논문집, 2022, pp. 12786-12796. [7] A. Rosinol, JJ Leonard 및 L. Carlone, &quot;Nerf-slam: 신경 광도장을 사용한 실시간 고밀도 단안 slam&quot;, arXiv 사전 인쇄본 arXiv:2210.13641, 2022. [8] JL Schönberger 및 J.-M. Frahm, &quot;Structure-from-motion revisited,&quot; 컴퓨터 비전 및 패턴 인식 컨퍼런스, 2016. [9] C. Campos, R. Elvira, JJ Gómez, JMM Montiel, JD Tardós, &quot;ORB-SLAM3: 시각적, 시각적 관성적 및 다중 맵 SLAM을 위한 정확한 오픈 소스 라이브러리,&quot; IEEE 로봇 공학 저널, 제37권, 제6호, 1874-1890쪽, 2021. [10] D. Kirk 외, &quot;Nvidia cuda 소프트웨어 및 GPU 병렬 컴퓨팅 아키텍처,&quot; ISMM, 제7권, 2007, 103-104쪽. [11] M. Adamkiewicz, T. Chen, A. Caccavale, R. Gardner, P. Culbertson, J. Bohg, 및 M. Schwager, &quot;신경 광휘 세계에서의 비전 전용 로봇 탐색&quot;, IEEE Robotics and Automation Letters, vol. 7, no. 2, pp. 4606-4613, 2022. 그림 3. 스탠포드 대학교 캠퍼스의 엘리엇 센터에서 야외 매핑을 위해 NeRF Bridge를 사용하여 생성된 NeRF 재구성.
